{"version":3,"sources":["webpack:///editor-shortcodes.js","webpack:///webpack/bootstrap ca7fb49646e66cf669b6","webpack:///./_src/admin/js/editor-shortcodes.dev.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","4","tinymce","PluginManager","add","editor","appointments_shortcode_item","shortcode","field","body","defaults","appointments_shortcode_field","push","text","onclick","windowManager","open","title","onsubmit","appointments_shortcode_on_submit","id","definition","type","label","this","_id","element","jQuery","datepickers","indexOf","length","datepicker","AppointmentsDateSettings","weekStart","values","options","checked","help","tooltip","e","atts","data","insertContent","registeredShortcodes","ed","activeEditor","app_menu","getLang","short","addButton","menu"],"mappings":"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","file":"editor-shortcodes.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n( function () {\n\n    tinymce.PluginManager.add( 'appointments_shortcodes', function ( editor ) {\n\n        var datepickers = [];\n\n        /**\n         * Generate the content for a shortcode popup\n         *\n         * @param shortcode\n         * @returns {{text: *, onclick: onclick}}\n         */\n        function appointments_shortcode_item( shortcode ) {\n            var body = [],\n                field;\n\n            for ( var i in shortcode.defaults ) {\n                field = appointments_shortcode_field( i, shortcode.defaults[i] );\n                if ( field ) {\n                    body.push( field );\n                }\n            }\n\n            return {\n                text: shortcode.name,\n                onclick: function () {\n                    editor.windowManager.open({\n                        title: shortcode.name,\n                        body: body,\n                        onsubmit: appointments_shortcode_on_submit( shortcode )\n                    });\n                }\n            };\n        }\n\n        /**\n         * Generates a single field for Editor popup\n         *\n         * @param id\n         * @param definition\n         * @returns {boolean}\n         */\n        function appointments_shortcode_field( id, definition ) {\n            var field = {};\n            switch ( definition.type ) {\n                case 'text': {\n                    field = {\n                        type: 'textbox',\n                        name: id,\n                        label: definition.name,\n                        value: definition.value\n                    };\n                    break;\n                }\n                case 'datepicker': {\n                    field = {\n                        type: 'textbox',\n                        name: id,\n                        label: definition.name,\n                        value: definition.value,\n                        onclick: function() {\n                            var id = this._id;\n                            var element = jQuery( '#' + id );\n                            if ( datepickers.indexOf( id ) < 0 ) {\n                                // Initialize Datepicker\n                                datepickers.push( id );\n                                if ( ! element.length || typeof element.datepicker === 'undefined' ) {\n                                    return;\n                                }\n\n                                element.datepicker();\n                                element.datepicker( \"option\", \"dateFormat\", 'yy-mm-dd' );\n                                element.datepicker( \"option\", \"firstDay\", AppointmentsDateSettings.weekStart );\n                            }\n\n                            if ( typeof element.datepicker === 'function' ) {\n                                element.datepicker( 'show' );\n                            }\n\n                        }\n                    };\n                    break;\n                }\n                case 'select': {\n                    field = {\n                        type: 'listbox',\n                        name: id,\n                        label: definition.name,\n                        values: definition.options\n                    };\n                    break;\n                }\n                case 'checkbox': {\n                    field = {\n                        type: 'checkbox',\n                        name: id,\n                        label: definition.name,\n                        value: 1\n                    };\n\n                    if ( definition.value ) {\n                        field.checked = true;\n                    }\n                    break;\n                }\n            }\n\n            if ( definition.help ) {\n                field.tooltip = definition.help\n            }\n\n            return field;\n        }\n\n        /**\n         * Generates the onSubmit action for a group of fields\n         *\n         * @param shortcode\n         * @returns {Function}\n         */\n        function appointments_shortcode_on_submit( shortcode ) {\n            return function( e ) {\n                var atts = '';\n                var value;\n                for ( var i in shortcode.defaults ) {\n                    if ( typeof e.data[ i ] !== 'undefined' && shortcode.defaults[i].value != e.data[i] ) {\n                        value = e.data[i];\n                        if ( 'checkbox' === shortcode.defaults[i].type ) {\n                            value = value ? 1 : 0;\n                        }\n                        atts += ' ' + i + '=\"' + value + '\"';\n                    }\n                }\n                editor.insertContent( '[' + shortcode.shortcode + atts + ']' );\n            }\n        }\n\n        var ed = tinymce.activeEditor,\n            shortcode,\n            registeredShortcodes;\n\n        var app_menu = [];\n\n\n\n        registeredShortcodes = ed.getLang( 'appointments_shortcodes.shortcodes' );\n\n        for ( var i in registeredShortcodes ) {\n            shortcode = registeredShortcodes[i];\n\n            app_menu.push((function (short) {\n                return appointments_shortcode_item(short);\n            })(shortcode));\n        }\n\n\n\n        editor.addButton( 'appointments_shortcodes', {\n            text: ed.getLang( 'appointments_shortcodes.label' ),\n            type: 'menubutton',\n            menu: app_menu\n        });\n    });\n})();\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// editor-shortcodes.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ca7fb49646e66cf669b6","\"use strict\";\n( function () {\n\n    tinymce.PluginManager.add( 'appointments_shortcodes', function ( editor ) {\n\n        var datepickers = [];\n\n        /**\n         * Generate the content for a shortcode popup\n         *\n         * @param shortcode\n         * @returns {{text: *, onclick: onclick}}\n         */\n        function appointments_shortcode_item( shortcode ) {\n            var body = [],\n                field;\n\n            for ( var i in shortcode.defaults ) {\n                field = appointments_shortcode_field( i, shortcode.defaults[i] );\n                if ( field ) {\n                    body.push( field );\n                }\n            }\n\n            return {\n                text: shortcode.name,\n                onclick: function () {\n                    editor.windowManager.open({\n                        title: shortcode.name,\n                        body: body,\n                        onsubmit: appointments_shortcode_on_submit( shortcode )\n                    });\n                }\n            };\n        }\n\n        /**\n         * Generates a single field for Editor popup\n         *\n         * @param id\n         * @param definition\n         * @returns {boolean}\n         */\n        function appointments_shortcode_field( id, definition ) {\n            var field = {};\n            switch ( definition.type ) {\n                case 'text': {\n                    field = {\n                        type: 'textbox',\n                        name: id,\n                        label: definition.name,\n                        value: definition.value\n                    };\n                    break;\n                }\n                case 'datepicker': {\n                    field = {\n                        type: 'textbox',\n                        name: id,\n                        label: definition.name,\n                        value: definition.value,\n                        onclick: function() {\n                            var id = this._id;\n                            var element = jQuery( '#' + id );\n                            if ( datepickers.indexOf( id ) < 0 ) {\n                                // Initialize Datepicker\n                                datepickers.push( id );\n                                if ( ! element.length || typeof element.datepicker === 'undefined' ) {\n                                    return;\n                                }\n\n                                element.datepicker();\n                                element.datepicker( \"option\", \"dateFormat\", 'yy-mm-dd' );\n                                element.datepicker( \"option\", \"firstDay\", AppointmentsDateSettings.weekStart );\n                            }\n\n                            if ( typeof element.datepicker === 'function' ) {\n                                element.datepicker( 'show' );\n                            }\n\n                        }\n                    };\n                    break;\n                }\n                case 'select': {\n                    field = {\n                        type: 'listbox',\n                        name: id,\n                        label: definition.name,\n                        values: definition.options\n                    };\n                    break;\n                }\n                case 'checkbox': {\n                    field = {\n                        type: 'checkbox',\n                        name: id,\n                        label: definition.name,\n                        value: 1\n                    };\n\n                    if ( definition.value ) {\n                        field.checked = true;\n                    }\n                    break;\n                }\n            }\n\n            if ( definition.help ) {\n                field.tooltip = definition.help\n            }\n\n            return field;\n        }\n\n        /**\n         * Generates the onSubmit action for a group of fields\n         *\n         * @param shortcode\n         * @returns {Function}\n         */\n        function appointments_shortcode_on_submit( shortcode ) {\n            return function( e ) {\n                var atts = '';\n                var value;\n                for ( var i in shortcode.defaults ) {\n                    if ( typeof e.data[ i ] !== 'undefined' && shortcode.defaults[i].value != e.data[i] ) {\n                        value = e.data[i];\n                        if ( 'checkbox' === shortcode.defaults[i].type ) {\n                            value = value ? 1 : 0;\n                        }\n                        atts += ' ' + i + '=\"' + value + '\"';\n                    }\n                }\n                editor.insertContent( '[' + shortcode.shortcode + atts + ']' );\n            }\n        }\n\n        var ed = tinymce.activeEditor,\n            shortcode,\n            registeredShortcodes;\n\n        var app_menu = [];\n\n\n\n        registeredShortcodes = ed.getLang( 'appointments_shortcodes.shortcodes' );\n\n        for ( var i in registeredShortcodes ) {\n            shortcode = registeredShortcodes[i];\n\n            app_menu.push((function (short) {\n                return appointments_shortcode_item(short);\n            })(shortcode));\n        }\n\n\n\n        editor.addButton( 'appointments_shortcodes', {\n            text: ed.getLang( 'appointments_shortcodes.label' ),\n            type: 'menubutton',\n            menu: app_menu\n        });\n    });\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/editor-shortcodes.dev.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}